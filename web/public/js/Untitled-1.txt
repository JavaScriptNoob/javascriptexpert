var myApp = angular.module('myApp', ['firebase', 'ngRoute']);

								  
 
    // Initialize Firebase
myApp.config(function ($routeProvider) {
    $routeProvider
        .when('/', {
            templateUrl: "src/home.html",
            controller: 'mainController'
        })
        .when("/login", {
            templateUrl: "src/login.html",
            controller: "loginCtrl"
        });
});
var globalAuth;
var userDateSaved;
var imageUrl;
var id;

 
	
	document.onload = function(){ if(window.location.indexOf('log')){
		ymaps.ready(init);
		
		function init() {
			var myMap = new ymaps.Map("map", {
					center: [55.73, 37.75],
					zoom: 9
				}, {
					searchControlProvider: 'yandex#search'
				}),
				yellowCollection = new ymaps.GeoObjectCollection(null, {
					preset: 'islands#yellowIcon'
				}),
				blueCollection = new ymaps.GeoObjectCollection(null, {
					preset: 'islands#blueIcon'
				}),
				yellowCoords = [[55.73, 37.75], [55.81, 37.75]],
				blueCoords = [[55.73, 37.65], [55.81, 37.65]];
		
			for (var i = 0, l = yellowCoords.length; i < l; i++) {
				yellowCollection.add(new ymaps.Placemark(yellowCoords[i]));
			}
			for (var i = 0, l = blueCoords.length; i < l; i++) {
				blueCollection.add(new ymaps.Placemark(blueCoords[i]));
			}
		
			myMap.geoObjects.add(yellowCollection).add(blueCollection);
		
			// Через коллекции можно подписываться на события дочерних элементов.
			yellowCollection.events.add('click', function () { alert('Кликнули по желтой метке') });
			blueCollection.events.add('click', function () { alert('Кликнули по синей метке') });
		
			// Через коллекции можно задавать опции дочерним элементам.
			blueCollection.options.set('preset', 'islands#blueDotIcon');
		}
		
		}
}
	
firebase.auth().onAuthStateChanged((user) => {
	if (user) {
	  console.log('rrr',user.uid);
	  id = user.uid;
	  console.log(1111,id);
	  document.cookie = id;
	//   console.log("cccc", document.cookie);
	
	  firebase.database().ref().child('accounts').orderByChild("userId").equalTo(id).once("value", function (snapshot) {
		var alreadyExists = false; 
		snapshot.forEach(function (child) {
			alreadyExists = true;
		  });
		if(!alreadyExists) {
			console.log("Creating new user ");
			firebase.database().ref().child('accounts').push({
				userId: id
		   });
		}  
	  })


	}
  });
//   firebase.database().ref().child('accounts').push({
 
// 	userId: id
//   })
document.addEventListener('DOMContentLoaded', function () {console.log(1111,id);
 
});
//  function valid (form,$location){
// var name = form.textarea.value;



// // for(var key in form.selectChoice) {
// // 	console.log(key);
// // 	console.log(form.selectChoice[key]);
// // }

// var index = form.selectChoice.options.selectedIndex;
// var selection = form.selectChoice.options[index].innerText;


// document.getElementById('submit').addEventListener('click', function(e){
// 	console.log(1);
// 	$location.url("login");
// 	$scope.$apply(); 
// });

// document.getElementById('submit').addEventListener('click', function(e){
// 	console.log(1);
// 	$location.url("login");
// 	$scope.$apply(); 
// });

// };


// if(window.location.indexOf('login')){
// ymaps.ready(init);

// function init() {
//     var myMap = new ymaps.Map("map", {
//             center: [55.73, 37.75],
//             zoom: 9
//         }, {
//             searchControlProvider: 'yandex#search'
//         }),
//         yellowCollection = new ymaps.GeoObjectCollection(null, {
//             preset: 'islands#yellowIcon'
//         }),
//         blueCollection = new ymaps.GeoObjectCollection(null, {
//             preset: 'islands#blueIcon'
//         }),
//         yellowCoords = [[55.73, 37.75], [55.81, 37.75]],
//         blueCoords = [[55.73, 37.65], [55.81, 37.65]];

//     for (var i = 0, l = yellowCoords.length; i < l; i++) {
//         yellowCollection.add(new ymaps.Placemark(yellowCoords[i]));
//     }
//     for (var i = 0, l = blueCoords.length; i < l; i++) {
//         blueCollection.add(new ymaps.Placemark(blueCoords[i]));
//     }

//     myMap.geoObjects.add(yellowCollection).add(blueCollection);

//     // Через коллекции можно подписываться на события дочерних элементов.
//     yellowCollection.events.add('click', function () { alert('Кликнули по желтой метке') });
//     blueCollection.events.add('click', function () { alert('Кликнули по синей метке') });

//     // Через коллекции можно задавать опции дочерним элементам.
//     blueCollection.options.set('preset', 'islands#blueDotIcon');
// }

// }
var users_list = [];
var users_coords = {};
var latlong = null;
var geoArray = [];
function get_coords_by_uid(user_id){    
    console.log("trying to get coordinates for ", user_id);
 
    firebase.database().ref().child(user_id).on('value', function (snapshot) {
        console.log(snapshot.val());
        latlong = snapshot.val();

        console.log("Здесь мы должны получить geo" , latlong);
        geoArray = Object.values(latlong);
        console.log(geoArray)       
        users_coords[user_id] = snapshot.val();
    },function(error){ 
        console.log("Error:" +error.code)
    });
};

 







    // var location = document.getElementById('get-location');
    // location.addEventListener('click', function () {
    //     console.log("firebase", firebase);

        
    //     console.log('users_list', users_list.length);
    //     for(var i = 0; i < users_list.length; i++) {
    //         get_coords_by_uid(users_list[i]);
    //     }
    //     var getUid;
    //     var ourUid;
    //     setTimeout(function () {
    //         /*Code to place coords on the map should be  */
    //         console.log(users_coords);
    //         for(var key in users_coords){
    //            ourUid =  key;  
    //         //    console.log(Object.keys(users_coords).map(key => srcObject[key].longitude)); 
    //         }
    //     }, 2000);
    //     console.log(ourUid);
       
        
    // });


window.onload = function () {
    navigator.geolocation.getCurrentPosition(function (location) {
        var latitude = location.coords.latitude;
        var longitude = location.coords.longitude;
        console.log(latitude, longitude);
        window.localStorage.setItem('location', JSON.stringify({latitude: latitude, longitude: longitude}));
        
    })

 
    firebase.database().ref().child("accounts").orderByChild("userId").on("value", function(snapshot) {
        snapshot.forEach(function(uid) {
            var current_uid = uid.val()['userId'];
            //var coords = get_coords_by_uid(current_uid);
            //console.log(current_uid, coords);
            console.log(current_uid);
            users_list.push(current_uid)
        });
    });
}



console.log('куки', document.cookie);
// if(
//     window.location.href=="address to check"
//     ){ymaps.ready(init);
//         geolocation.get({
//             provider: 'browser',
//             mapStateAutoApply: true
//         }).then(function (result) {
//             // Синим цветом пометим положение, полученное через браузер.
//             // Если браузер не поддерживает эту функциональность, метка не будет добавлена на карту.
//             result.geoObjects.options.set('preset', 'islands#blueCircleIcon');
//             myMap.geoObjects.add(result.geoObjects);
//             function init() {
//                 var geolocation = ymaps.geolocation,
//                     myMap = new ymaps.Map('map', {
//                         center: [55, 34],
//                         zoom: 10
//                     }, {
//                         searchControlProvider: 'yandex#search'
//                     });
                
            
            
//                 // Сравним положение, вычисленное по ip пользователя и
//                 // положение, вычисленное средствами браузера.
//                 geolocation.get({
//                     provider: 'yandex',
//                     mapStateAutoApply: true
//                 }).then(function (result) {
//                     // Красным цветом пометим положение, вычисленное через ip.
//                     result.geoObjects.options.set('preset', 'islands#redCircleIcon');
//                     result.geoObjects.get(0).properties.set({
//                         balloonContentBody: 'Мое местоположение'
//                     });
//                     myMap.geoObjects.add(result.geoObjects);
//                 })}

    function ValidateForm(){
        
        var nameID=document.MailingList.text;
        console.log(nameID);
         
        if ((nameID.value==null)||(nameID.value=="")){
            alert("Please Enter your Name");
            nameID.focus();
            return false;
        }
        return window.location.replace(window.location.href + "login")}
        					  
	myApp.controller('mainController', function ($scope) {

	})

	myApp.controller('loginCtrl', function ($scope) {
		console.log("ttttlenta", globalAuth);
	});

	myApp.controller('databaseCtrl', function ($firebaseObject) {
		const rootRef = firebase.database().ref().child('geodata');
		const ref = rootRef.child('object');
		this.object = $firebaseObject(ref);
		var geoCordinates = JSON.parse(window.localStorage.getItem('location'));
		var id = document.cookie;
		firebase.database().ref().child(id).set({
			latitidude: geoCordinates.latitude,
			longitude: geoCordinates.longitude
		});
	});

	myApp.controller('authCtrl', 
	
	
	function iWillRuleOverTheWorld ($firebaseAuth, $location) {
	    var someOccupiedCountries = this;
	
		var auth = $firebaseAuth;
		console.log("auth object --->", this.$signInWithPopup);
		someOccupiedCountries.login = function(){
			
			auth.$signInWithPopup('google');
		
		};

		someOccupiedCountries.logout = function(){
			
			auth.$signOut();
		
		};
		
		
		auth.$onAuthStateChanged(function(authData ){
			someOccupiedCountries.author = authData;
			//    firebase.database().ref().child('UserData').push({
			// 	takedata: authData
				
			// });
			if(authData) {
				globalAuth = authData;
				userDateSaved = globalAuth.displayName;
				imageUrl =globalAuth.photoUrl;
				
				console.log('ffff',imageUrl,userDateSaved);
				// $location.url("login");
				// $scope.$apply(); 
			}
		});
	}
	);
